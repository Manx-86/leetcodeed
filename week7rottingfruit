class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        rows, cols = len(grid), len(grid[0])
        fresh_oranges = 0
        time_elapsed = 0
        for r in range(rows):
            for c in range(cols):
                if grid[r][c] == 1:
                    fresh_oranges += 1
        directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]
        while fresh_oranges > 0:
            updated = False
            for r in range(rows):
                for c in range(cols):
                    if grid[r][c] == 2:
                        for dr, dc in directions:
                            new_r, new_c = r + dr, c + dc
                            if (0 <= new_r < rows and 
                                0 <= new_c < cols and 
                                grid[new_r][new_c] == 1):
                                grid[new_r][new_c] = 3  
                                fresh_oranges -= 1
                                updated = True
            if not updated:
                return -1
            for r in range(rows):
                for c in range(cols):
                    if grid[r][c] == 3:
                        grid[r][c] = 2  
            time_elapsed += 1
        return time_elapsed
